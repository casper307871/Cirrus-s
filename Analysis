import os
import zipfile

# Define file contents
requirements_txt = """boto3>=1.34.0
botocore>=1.34.0
pyrogram==2.0.106
tgcrypto==1.2.5
SQLAlchemy>=2.0.0
"""

aws_test_py = """import boto3

def test_s3_connection():
    \"\"\"Simple S3 test to confirm AWS credentials work.\"\"\"
    s3 = boto3.resource("s3")
    print("✅ Connected to AWS S3")

    print("Listing buckets:")
    for bucket in s3.buckets.all():
        print(" -", bucket.name)

    # Optional: upload a test file
    with open("cirrus_test.txt", "w") as f:
        f.write("Hello from Cirrus bot!")

    with open("cirrus_test.txt", "rb") as data:
        bucket_name = "your-bucket-name"  # change this!
        s3.Bucket(bucket_name).put_object(Key="cirrus_test.txt", Body=data)
        print(f"✅ Uploaded cirrus_test.txt to {bucket_name}")

if __name__ == "__main__":
    test_s3_connection()
"""

readme_md = """# Cirrus Bot AWS Integration Package

This package helps connect the Cirrus bot to AWS services (e.g., S3).

## Setup

1. Create and activate a virtual environment:
   ```bash
   python3 -m venv .venv
   source .venv/bin/activate   # Linux/macOS
   .venv\\Scripts\\activate      # Windows
   ```

2. Install dependencies:
   ```bash
   pip install -r requirements.txt
   ```

3. Configure AWS credentials (one-time setup):
   ```bash
   aws configure
   ```

4. Test the connection:
   ```bash
   python aws_test.py
   ```

## Notes
- Replace `your-bucket-name` in `aws_test.py` with your actual S3 bucket name.
- This package currently includes S3 test integration. You can expand it for DynamoDB, RDS, or other AWS services as needed.
"""

# Create the zip file
zip_filename = "/mnt/data/cirrus_aws_package.zip"
with zipfile.ZipFile(zip_filename, "w") as zipf:
    zipf.writestr("requirements.txt", requirements_txt)
    zipf.writestr("aws_test.py", aws_test_py)
    zipf.writestr("README.md", readme_md)

zip_filename
